apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.3.7.RELEASE')
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    springCloudVersion = 'Hoxton.SR9'
}
ext['log4j2.version'] = '2.16.0'

bootJar {
    archiveBaseName = 'spring-boot-payments'
    archiveVersion =  '0.0.15'
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.cloud:spring-cloud-starter-vault-config')
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('io.opentracing.contrib:opentracing-spring-jaeger-web-starter:3.2.2')
    implementation('io.opentracing.contrib:opentracing-spring-jaeger-cloud-starter:3.2.2')
    implementation('com.h2database:h2')
    implementation('org.postgresql:postgresql')
    implementation('de.codecentric:chaos-monkey-spring-boot:2.5.0')
    implementation('io.micrometer:micrometer-registry-prometheus:1.7.0')
    modules {
        module('org.springframework.boot:spring-boot-starter-logging') {
            replacedBy('org.springframework.boot:spring-boot-starter-log4j2', 'Use Log4j2 instead of Logback')
        }
    }
    testImplementation('junit:junit')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}